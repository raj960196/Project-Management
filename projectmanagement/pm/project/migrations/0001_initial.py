# Generated by Django 5.0.2 on 2024-03-01 12:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('technology', models.CharField(choices=[('Python', 'Python'), ('Java', 'Java'), ('C++', 'C++'), ('C#', 'C#')], max_length=100)),
                ('estimated_hours', models.PositiveIntegerField()),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
            ],
            options={
                'db_table': 'project',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('status', models.IntegerField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'status',
            },
        ),
        migrations.CreateModel(
            name='ProjectTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'projectteam',
            },
        ),
        migrations.CreateModel(
            name='ProjectModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=30)),
                ('des', models.CharField(max_length=30, null=True)),
                ('estimated_hours', models.PositiveIntegerField()),
                ('startDate', models.DateField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.status')),
            ],
            options={
                'db_table': 'projectmodule',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tital', models.CharField(max_length=100)),
                ('priority', models.CharField(max_length=100)),
                ('des', models.CharField(max_length=300)),
                ('total_minute', models.IntegerField()),
                ('module_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.projectmodule')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
                ('status_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.status')),
            ],
            options={
                'db_table': 'task',
            },
        ),
        migrations.CreateModel(
            name='UserTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.task')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'usertask',
            },
        ),
    ]
